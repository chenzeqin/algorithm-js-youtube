import{_ as e,c as t,o as _,a1 as a}from"./chunks/framework.B4u6hNpB.js";const f=JSON.parse('{"title":"空间复杂度","description":"","frontmatter":{},"headers":[],"relativePath":"02-时间和空间复杂度/2.2-空间复杂度.md","filePath":"02-时间和空间复杂度/2.2-空间复杂度.md"}'),i={name:"02-时间和空间复杂度/2.2-空间复杂度.md"},l=a('<h1 id="空间复杂度" tabindex="-1">空间复杂度 <a class="header-anchor" href="#空间复杂度" aria-label="Permalink to &quot;空间复杂度&quot;">​</a></h1><p>用来描述算法的内存使用情况, 衡量算法的运行效率, 也称为存储复杂度, 常见的空间复杂度有:</p><ol><li>常数空间复杂度：O(1)</li><li>线性空间复杂度：O(n)</li><li>平方空间复杂度：O(n^2)</li><li>立方空间复杂度：O(n^3)</li></ol><p>常见的空间复杂度（临时变量内存消耗）：</p><ul><li>O(1)：常数空间复杂度，算法的空间需求与数据规模无关，比如打印输出语句。</li><li>O(n)：线性空间复杂度，算法的空间需求与数据规模成正比，比如简单排序算法。</li><li>O(n^2)：平方空间复杂度，算法的空间需求与数据规模的平方成正比，比如简单选择排序算法。</li><li>O(n^3)：立方空间复杂度，算法的空间需求与数据规模的立方成正比，比如矩阵乘法。</li></ul>',5),o=[l];function n(r,s,c,d,p,h){return _(),t("div",null,o)}const u=e(i,[["render",n]]);export{f as __pageData,u as default};
